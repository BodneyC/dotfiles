set -g default-shell $SHELL
set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',alacritty:RGB'

unbind C-b
set -g prefix 'C- '
bind 'C- ' send-prefix
bind-key \# last-window

set -g mouse on

set -g base-index 1

set-window-option -g automatic-rename on
set-option -g allow-rename off
set-option -g set-titles on

set-option -g status-keys vi
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind '%' split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

bind-key 'C-z' resize-pane -Z

bind-key -n 'M-H' resize-pane -L 4
bind-key -n 'M-J' resize-pane -D 4
bind-key -n 'M-K' resize-pane -U 4
bind-key -n 'M-L' resize-pane -R 4
bind-key -n Ó     resize-pane -L 4
bind-key -n Ô     resize-pane -D 4
bind-key -n      resize-pane -U 4
bind-key -n Ò     resize-pane -R 4

bind-key a setw synchronize-panes

# NOTE: The below may be better
# setenv -g BSPMUX h
# bind-key -n 'M-Enter' run 'next_direction="$(tmux display -p #{BSPMUX})"; tmux splitw -"$next_direction" -t {bottom-right}; [[ "$next_direction" == "h" ]] && next_direction="v" || next_direction="h"; tmux setenv -g BSPMUX "$next_direction"'

bind-key -n 'M-Enter' run '[[ $(($(tmux display -p "2*#{pane_width}-5*#{pane_height}"))) -lt 0 ]] && tmux splitw -v || tmux splitw -h'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind-key -n ˙     if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n ∆     if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n ˚     if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n ¬     if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

# Requires tmux >= 3.0 (the suggestion on the site deals with this, but meh)
bind-key -n 'M-\' if-shell "$is_vim" 'send-keys M-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
bind-key -T copy-mode-vi ˙     select-pane -L
bind-key -T copy-mode-vi ∆     select-pane -D
bind-key -T copy-mode-vi ˚     select-pane -U
bind-key -T copy-mode-vi ¬     select-pane -R
# bind-key -T copy-mode-vi ??? select-pane -l

set -sg escape-time 0

bind-key r source-file ~/.tmux.conf

bind Q kill-session

source-file ~/.tmux/colorschemes/colors1-$TERMTHEME

bind-key -T root WheelUpPane \
	if-shell -Ft = '#{?mouse_any_flag,1,#{pane_in_mode}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
		'send -Mt=' \
		'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
			"send -t= Down" "send -Mt="'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'

run '~/.tmux/plugins/tpm/tpm'
