#!/usr/bin/zsh

gig() {
  if ! tl="$(git rev-parse --show-toplevel)"; then
    echo "Not in git directory"
    return 1
  fi
  gitignore="$tl/.gitignore"
  if ! test -f "$gitignore"; then
    touch "$gitignore"
  fi
  if [[ "$#" == 0 ]]; then
    cat "$gitignore"
  fi
  for e in "$@"; do
    if ! grep -qe "^$e$" "$gitignore"; then
      echo "$e" >> "$gitignore"
    else
      echo "'$e' already in $gitignore"
    fi
  done
}

pdfcat() {
  if command -v pdftotext &> /dev/null; then
    for f in "$@"; do
      pdftotext "$f" - | less
    done
  fi
}

curl() {
  /usr/bin/curl "$@"
  echo
}

ssh() {
  if [[ -n "$KITTY_WINDOW_ID" ]]; then
    kitty +kitten ssh "$@"
  else
    ssh "$@"
  fi
}

usrbinlink() {
  mv "$1" /usr/local/bin/ && ln -s /usr/local/bin/"$1" .
}

v-which() {
  "$(command -v nvim)" "$(command -v "$1")"
}

sdkman-init() {
  . "$HOME/.sdkman/bin/sdkman-init.sh"
}

nvm-init() {
  export NVM_DIR="$HOME/.nvm"
  if [ -s "$NVM_DIR/nvm.sh" ]; then
    # shellcheck source=$HOME/.nvm/nvm.sh
    . "$NVM_DIR/nvm.sh"
  fi
}

pretty-print-path() {
  echo "${PATH//:/\n}" | sort
}

lns() {
  [[ -z "$1" ]] && {
    echo "No args specified"
    return 1
  }
  [[ -z "$2" ]] && {
    echo "No second arg specified"
    return 1
  }
  ln -s "$(realpath "$1")" "$(realpath "$2")"
}

xi() {
  if command -v clip.exe &> /dev/null; then
    clip.exe "$@"
  elif command -v xclip &> /dev/null; then
    xclip -in -selection clipboard "$@"
  elif command -v pbcopy &> /dev/null; then
    pbcopy "$@"
  fi
}

xo() {
  if command -v xclip &> /dev/null; then
    xclip -out -selection clipboard "$@"
  elif command -v pbpaste &> /dev/null; then
    pbpaste "$@"
  fi
}

if hash exa 2> /dev/null; then
  alias e="exa --classify --group-directories-first --all"
  alias el="${aliases[e]} --long"
  alias ee="${aliases[e]} --long"
  alias es="${aliases[el]} --header --binary --group"
  alias ea="${aliases[es]} --all"
  alias e1="exa -1 --all"
  alias et="exa -T"
  [[ "${aliases[l]}" ]] && unalias l
  [[ "${aliases[ls]}" ]] && unalias ls
  [[ "${aliases[la]}" ]] && unalias la
else
  alias l="ls -ha"
  alias ll="ls -hls"
fi
alias IGNORE_PROXY='ALL_PROXY="" HTTPS_PROXY="" HTTP_PROXY=""'
alias bdate="date '+%Y-%M-%d'"
alias psrg="ps aux | rg"
alias gotop="TERM=xterm-256color gotop"
alias gs="echo \"No ghostscript, you spanner\""
alias lg="lazygit"
alias nettest="ping -c 2 google.com"
alias q="_yes_or_no 'Are you sure?' && systemctl poweroff"
# alias reboot="_yes_or_no 'Are you sure?' && sudo reboot"
alias scim="TERM=xterm-256color scim"
alias t="task"
alias rn="ranger"
alias v-novirk="$(command -v nvim) +\"let g:virk_enabled=0\""
alias v-="$(command -v nvim) +\"let g:virk_enabled=0\""
alias v-startup="$(command -v nvim) --startuptime /tmp/nvim.log -c 'qall' && v-novirk /tmp/nvim.log"
alias suv="sudo -E nvim"
alias v="nvim"
alias linedo="xargs -d '\n' -I {}"
alias k="kubectl"
command -v xdg-open &> /dev/null && alias open="xdg-open"
alias luajit="rlwrap luajit"
